package com.hbcsoft.exception;

import java.io.PrintStream;
import java.util.Date;

/**
 * 异常
 * @author zhangdengyu
 *
 */
public class HbcsoftException extends Exception {

	private static final long serialVersionUID = 1L;

	private transient int errorNo = 0;
	private transient String errorMessage = "";
	private transient String errorModule = "Unknow Module";
	private transient String errorAppend = "";
	private static final String LINE_SEPARATOR = System.getProperty("line.separator");
	private static boolean init = false;
	
	public HbcsoftException(final String theErrorCatalog, final int theErrorNo,
			final String theErrorMessage) {
		super();
		this.errorAppend = theErrorCatalog;
		this.errorNo = theErrorNo;
		this.errorMessage = theErrorMessage;
	}

	public HbcsoftException(final String theErrorCatalog, final int theErrorNo,
			final String theErrorModule, final String theErrorMessage, final String theErrorAppend) {
		super();
		this.errorAppend = theErrorCatalog;
		this.errorNo = theErrorNo;
		this.errorModule = theErrorModule;
		this.errorMessage = theErrorMessage;
		this.errorAppend = theErrorAppend;
	}

	public HbcsoftException(final String theErrorCatalog, final int theErrorNo,
			final String theErrorModule, final String theErrorMessage) {
		super();
		this.errorAppend = theErrorCatalog;
		this.errorNo = theErrorNo;
		this.errorModule = theErrorModule;
		this.errorMessage = theErrorMessage;
	}
	public HbcsoftException(final String theErrorCatalog, final int theErrorNo,
			final Exception exc) {
		super();
		this.errorAppend = theErrorCatalog;
		this.errorNo = theErrorNo;
		this.errorMessage = exc.getMessage();
	}

	public String getErrorCatalog() {
		return this.errorAppend;
	}

	public int getErrorNo() {
		return this.errorNo;
	}

	public String getMessage() {
		return this.errorMessage;
	}
	
	public String getErrorMessage() {
		return this.errorMessage;
	}

	public String getErrorModule() {
		return this.errorModule;
	}

	public void formart(final int errorNo, final String errorMessage, final String errorModule, final String errorAppend) {
		this.errorAppend = errorAppend;
		this.errorNo = errorNo;
		this.errorModule = errorModule;
		this.errorMessage = errorMessage;
	}

	public void printStackTrace(final PrintStream ps) {
		synchronized (ps) {
			final Date now = new Date();
			final StringBuffer buffer = new StringBuffer(300);
			buffer.append(LINE_SEPARATOR)
					.append("***** UserException occurred at ").append(now)
					.append(" *****");

			buffer.append(LINE_SEPARATOR).append("ErrorCatalog = ")
					.append(getErrorCatalog());

			buffer.append(LINE_SEPARATOR).append("ErrorNo      = ")
					.append(getErrorNo());

			buffer.append(LINE_SEPARATOR).append("ErrorModule  = ")
					.append(getErrorModule());

			buffer.append(LINE_SEPARATOR).append("ErrorMessage = ")
					.append(getErrorMessage());

			buffer.append(LINE_SEPARATOR);
			buffer.append(LINE_SEPARATOR).append("The stack trace is: ");
			buffer.append(LINE_SEPARATOR).append(this.errorAppend);
			buffer.append(LINE_SEPARATOR);
			ps.print(buffer.toString());
			super.printStackTrace(ps);
		}
	}

	public void printStackTrace() {
		printStackTrace(System.err);
	}

	public static boolean isInit() {
		return init;
	}
}

